[workspace]
members = ["crates/*"]
resolver = "2"

[workspace.package]
version = "0.0.1"
edition = "2021"

[profile.dev]
opt-level = 1
[profile.dev.package."*"]
opt-level = 3

[workspace.dependencies]

[workspace.lints.rust]
absolute_paths_not_starting_with_crate = "warn"
let_underscore_drop = "warn"
macro_use_extern_crate = "warn"
meta_variable_misuse = "warn"
missing_copy_implementations = "warn"
missing_docs = "warn"
non_ascii_idents = "warn"
single_use_lifetimes = "warn"
trivial_casts = "warn"
trivial_numeric_casts = "warn"
unit_bindings = "warn"
unreachable_pub = "warn"
unsafe_code = "warn"
unsafe_op_in_unsafe_fn = "warn"
unused_crate_dependencies = "warn"
unused_import_braces = "warn"
unused_macro_rules = "warn"
unused_qualifications = "warn"
unused_results = "warn"
variant_size_differences = "warn"

# Enable when stabilized
# must_not_suspend = "warn"
# lossy_provenance_casts = "warn"
# fuzzy_provenance_casts = "warn"

[workspace.lints.clippy]
# Groups
all = "warn"
pedantic = "warn"
cargo = "warn"

# We allow this because internal crates really dont need most of these.
cargo_common_metadata = { level = "allow", priority = 1 }
# I find this is largely useless since some names _should_ be similar
# Additionally it does not seem to be a stadard the community enforces.
similar_names = { level = "allow", priority = 1 }


# The following are restrictions, the rational is as follows.
# 1. Encorage standardization of the code we write
# 2. Provide useful hints
# 3. Eliminate useless code
# 4. Increase performance

# Use ManuallyDrop
mem_forget = "warn"
# You should be pretty sure you're in bounds.
indexing_slicing = "warn"
missing_asserts_for_indexing = "warn"

# These should be treated as suggestions and may be switched off if an explaination is provided.
absolute_paths = "warn"
assertions_on_result_states = "warn"
arithmetic_side_effects = "warn"
create_dir = "warn"
deref_by_slicing = "warn"
empty_drop = "warn"
empty_structs_with_brackets = "warn"
filetype_is_file = "warn"
format_push_string = "warn"
lossy_float_literal = "warn"
missing_assert_message = "warn"
multiple_inherent_impl = "warn"
mutex_atomic = "warn"
needless_raw_strings = "warn"
panic_in_result_fn = "warn"
partial_pub_fields = "warn"
pub_without_shorthand = "warn"
rc_buffer = "warn"
rc_mutex = "warn"
redundant_type_annotations = "warn"
self_named_module_files = "warn"
semicolon_outside_block = "warn"
shadow_unrelated = "warn"
string_lit_chars_any = "warn"
string_slice = "warn"
tests_outside_test_module = "warn"
undocumented_unsafe_blocks = "warn"
unnecessary_self_imports = "warn"
unneeded_field_pattern = "warn"
unseparated_literal_suffix = "warn"
unwrap_in_result = "warn"
unwrap_used = "warn"
verbose_file_reads = "warn"

# Enable when stabilized
# Stabilization pr: https://github.com/rust-lang/rust/issues/54503
# allow_attributes = "warn"
# This one we already do informally.
# allow_attributes_without_reason = "warn"
